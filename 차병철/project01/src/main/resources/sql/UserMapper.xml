<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="UserMapper">
 	
	<resultMap id="userSelectMap" type="user">
		<result property="userNo"	      column="user_no" 		jdbcType="NUMERIC" />
		<result property="userName"	      column="user_name" 		jdbcType="VARCHAR" />
		<result property="userPwd" 	      column="user_pwd" 		jdbcType="VARCHAR" />
		<result property="userGender" 	  column="user_gend" 		jdbcType="VARCHAR" />
		<result property="userAge" 		  column="user_age" 		jdbcType="VARCHAR" />
		<result property="userMail" 	  column="user_mail" 		jdbcType="VARCHAR" />
		<result property="userFilePath"   column="user_phot" 		jdbcType="VARCHAR" />
		<result property="userType" 	  column="user_type" 		jdbcType="VARCHAR"  />
		
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addUser"		parameterType="user" >
	 	INSERT
		INTO users(  user_no , user_name , user_pwd , user_gend , user_age, user_mail, user_phot, user_type) 
		VALUES	 (	 seq_user_no.nextval , #{userName:VARCHAR} , #{userPwd} , #{userGender:VARCHAR} , #{userAge:VARCHAR} , #{userMail}
					 , #{userFilePath:VARCHAR} , #{userType:VARCHAR} )
	 </insert>
	 
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getUser"	parameterType="string"	resultMap="userSelectMap">
		SELECT
		user_name , user_pwd , user_gend, user_age , user_mail , user_phot, user_type 		
		FROM users 
		WHERE user_mail = #{value}
	 </select>
	 
	 
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateUser"	parameterType="user" >
	   	UPDATE users
	   	<set>
	   		user_name 	= #{userName} ,
			cell_phone	= #{phone},
			addr 				= #{addr} ,
			email				=	#{email}
	   	</set>
	   	WHERE user_id = #{userId}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getUserList"  parameterType="search"	resultMap="userSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT user_id , user_name , email
											FROM users
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				user_id like &apos;${searchKeyword}%&apos;
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				user_name like &apos;${searchKeyword}%&apos;
													</if>
												</where>
											</if>
											ORDER BY user_id ) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT user_id , user_name , email
						FROM users
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			user_id like &apos;${searchKeyword}%&apos;
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 		user_name like '${searchKeyword}%&apos;
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
</mapper>